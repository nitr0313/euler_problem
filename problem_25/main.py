import time
# Последовательность Фибоначчи определяется рекурсивным правилом:

# Fn = Fn−1 + Fn−2, где F1 = 1 и F2 = 1.
# Таким образом, первые 12 членов последовательности равны:

# F1 = 1
# F2 = 1
# F3 = 2
# F4 = 3
# F5 = 5
# F6 = 8
# F7 = 13
# F8 = 21
# F9 = 34
# F10 = 55
# F11 = 89
# F12 = 144
# Двенадцатый член F12 - первый член последовательности, который содержит три цифры.

# Каков порядковый номер первого члена последовательности Фибоначчи, содержащего 1000 цифр?

def fib(num_len):
    a, b = 1, 1
    index = 1
    while len(str(a)) < num_len:
        index += 1
        a, b = b, a+b
    return index


if __name__ == '__main__':
    start = time.time()
    ans = fib(1000)
    total = time.time() - start
    print(f'Ответ: {ans}\nВремени затрачено {total}')

# Ответ: 4782
# Времени затрачено 0.04897046089172363
